{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Facundo\\\\Desktop\\\\Henry\\\\Material Henry\\\\M2\\\\FT-M2\\\\09-React-Routing\\\\homework\\\\src\\\\containers\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './App.css';\nimport Nav from '../components/Nav.jsx';\nimport Cards from '../components/Cards.jsx';\nimport Ciudad from \"../components/Ciudad.jsx\";\nimport { BrowserRouter, Route } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst apiKey = '4ae2636d8dfbdc3044bede63951a019b';\n\n/*#__PURE__*/\n_jsxDEV(BrowserRouter, {\n  children: [/*#__PURE__*/_jsxDEV(Route, {\n    path: \"/\",\n    render: () => /*#__PURE__*/_jsxDEV(Nav, {\n      onSearch: \"onSearch\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 32\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 1\n  }, this), /*#__PURE__*/_jsxDEV(Route, {\n    path: \"/about\",\n    component: \"About\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 1\n  }, this), /*#__PURE__*/_jsxDEV(Route, {\n    exact: true,\n    path: \"/\",\n    render: () => /*#__PURE__*/_jsxDEV(Cards, {\n      cities: \"cities\",\n      onClose: \"onClose\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 37\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 1\n  }, this), /*#__PURE__*/_jsxDEV(Route, {\n    path: \"/ciudad/:ciudadId\",\n    render: ({\n      match\n    }) => /*#__PURE__*/_jsxDEV(Ciudad, {\n      city: \"onFilter(match.params.ciudadId)\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 54\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 1\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 11,\n  columnNumber: 1\n}, this);\n\nfunction App() {\n  _s();\n\n  const [cities, setCities] = useState([]);\n\n  function onClose(id) {\n    setCities(oldCities => oldCities.filter(c => c.id !== id));\n  }\n\n  function onSearch(ciudad) {\n    //Llamado a la API del clima\n    fetch(`http://api.openweathermap.org/data/2.5/weather?q=${ciudad}&appid=${apiKey}`).then(r => r.json()).then(recurso => {\n      if (recurso.main !== undefined) {\n        const ciudad = {\n          min: Math.round(recurso.main.temp_min),\n          max: Math.round(recurso.main.temp_max),\n          img: recurso.weather[0].icon,\n          id: recurso.id,\n          wind: recurso.wind.speed,\n          temp: recurso.main.temp,\n          name: recurso.name,\n          weather: recurso.weather[0].main,\n          clouds: recurso.clouds.all,\n          latitud: recurso.coord.lat,\n          longitud: recurso.coord.lon\n        };\n        setCities(oldCities => [...oldCities, ciudad]);\n      } else {\n        alert(\"Ciudad no encontrada\");\n      }\n    });\n  }\n\n  function onFilter(ciudadId) {\n    let ciudad = cities.filter(c => c.id === parseInt(ciudadId));\n\n    if (ciudad.length > 0) {\n      return ciudad[0];\n    } else {\n      return null;\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(Nav, {\n      onSearch: onSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Cards, {\n        cities: cities,\n        onClose: onClose,\n        onFilter: ciudadId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"f1nPJs+hrTaAy6BEqAnKgJLvJt4=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Facundo/Desktop/Henry/Material Henry/M2/FT-M2/09-React-Routing/homework/src/containers/App.js"],"names":["React","useState","Nav","Cards","Ciudad","BrowserRouter","Route","apiKey","match","App","cities","setCities","onClose","id","oldCities","filter","c","onSearch","ciudad","fetch","then","r","json","recurso","main","undefined","min","Math","round","temp_min","max","temp_max","img","weather","icon","wind","speed","temp","name","clouds","all","latitud","coord","lat","longitud","lon","alert","onFilter","ciudadId","parseInt","length"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\n\r\nimport './App.css';\r\nimport Nav from '../components/Nav.jsx';\r\nimport Cards from '../components/Cards.jsx';\r\nimport Ciudad from \"../components/Ciudad.jsx\";\r\nimport { BrowserRouter, Route } from \"react-router-dom\";\r\n\r\nconst apiKey = '4ae2636d8dfbdc3044bede63951a019b';\r\n\r\n<BrowserRouter>\r\n\r\n<Route path='/'  render={() => <Nav onSearch={\"onSearch\"} />} />\r\n<Route  path='/about' component={\"About\"} />\r\n<Route exact path=\"/\" render={() => <Cards cities={\"cities\"} onClose={\"onClose\"} />} />\r\n<Route path='/ciudad/:ciudadId' render={({match}) => <Ciudad city={\"onFilter(match.params.ciudadId)\"}/>} />\r\n \r\n</BrowserRouter>\r\n\r\nfunction App() {\r\n  const [cities, setCities] = useState([]);\r\n  function onClose(id) {\r\n    setCities(oldCities => oldCities.filter(c => c.id !== id));\r\n  }\r\n  function onSearch(ciudad) {\r\n    //Llamado a la API del clima\r\n    fetch(`http://api.openweathermap.org/data/2.5/weather?q=${ciudad}&appid=${apiKey}`)\r\n      .then(r => r.json())\r\n      .then((recurso) => {\r\n        if(recurso.main !== undefined){\r\n          const ciudad = {\r\n            min: Math.round(recurso.main.temp_min),\r\n            max: Math.round(recurso.main.temp_max),\r\n            img: recurso.weather[0].icon,\r\n            id: recurso.id,\r\n            wind: recurso.wind.speed,\r\n            temp: recurso.main.temp,\r\n            name: recurso.name,\r\n            weather: recurso.weather[0].main,\r\n            clouds: recurso.clouds.all,\r\n            latitud: recurso.coord.lat,\r\n            longitud: recurso.coord.lon\r\n          };\r\n          setCities(oldCities => [...oldCities, ciudad]);\r\n        } else {\r\n          alert(\"Ciudad no encontrada\");\r\n        }\r\n      });\r\n  }\r\n  \r\n  function onFilter(ciudadId) {\r\n    let ciudad = cities.filter(c => c.id === parseInt(ciudadId));\r\n    if(ciudad.length > 0) {\r\n        return ciudad[0];\r\n    } else {\r\n        return null;\r\n    }\r\n  }\r\n  return (\r\n    <div className=\"App\">\r\n      <Nav onSearch={onSearch}/>\r\n      <div>\r\n        <Cards\r\n          cities={cities}\r\n          onClose={onClose}\r\n          onFilter={ciudadId}\r\n        />\r\n      </div>\r\n      <hr />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n\r\n"]},"metadata":{},"sourceType":"module"}